{% for vni in vnis %}
delete routing-instances {{ vni.l2.name }}
{% endfor %}

{#
set routing-instances <VNI1-L2> vtep-source-interface lo0.0
set routing-instances <VNI1-L2> instance-type virtual-switch
set routing-instances <VNI1-L2> route-distinguisher <LO0-ADDRESS>:<ID-VNI-1>
set routing-instances <VNI1-L2> vrf-import <VNI1-L2-IMPORT>
set routing-instances <VNI1-L2> vrf-target target:<AS-NUMBER>:<ID-VNI-1>
set routing-instances <VNI1-L2> protocols evpn encapsulation vxlan
set routing-instances <VNI1-L2> protocols evpn extended-vni-list <ID-VNI-1>
set routing-instances <VNI1-L2> protocols evpn vni-options vni <ID-VNI-1> vrf-target export target:<AS-NUMBER>:<ID-VNI-1>
set routing-instances <VNI1-L2> protocols evpn multicast-mode ingress-replication
set routing-instances <VNI1-L2> bridge-domains bd-<VNI1> vlan-id <VNI-1>
set routing-instances <VNI1-L2> bridge-domains bd-<VNI1> routing-interface irb.<VNI-1>
set routing-instances <VNI1-L2> bridge-domains bd-<VNI1> vxlan vni <VNI-1>
set routing-instances <VNI1-L2> bridge-domains bd-<VNI1> vxlan ingress-node-replication

set policy-options policy-statement <VNI1-L2-IMPORT> term A from community <VNI-1>
set policy-options policy-statement <VNI1-L2-IMPORT> term A then accept
set policy-options community <VNI-1> members target:<AS-NUMBER>:<VNI-1>
#}