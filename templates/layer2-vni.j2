{% for l2_vni in l2_vnis %}
set routing-instances {{ l2_vni.name }} vtep-source-interface {{ l2_vni.lo_interface }}.0
set routing-instances {{ l2_vni.name }} instance-type virtual-switch
set routing-instances {{ l2_vni.name }} route-distinguisher {{ lo_interfaces[l2_vni.lo_interface].address }}:{{ l2_vni.vni_id }}
set routing-instances {{ l2_vni.name }} vrf-import {{ l2_vni.import }}
set routing-instances {{ l2_vni.name }} vrf-target target:{{ l2_vni.asn }}:{{ l2_vni.vni_id }}
set routing-instances {{ l2_vni.name }} protocols evpn encapsulation vxlan
set routing-instances {{ l2_vni.name }} protocols evpn extended-vni-list {{ l2_vni.vni_id }}
set routing-instances {{ l2_vni.name }} protocols evpn vni-options vni {{ l2_vni.vni_id }} vrf-target export target:{{ l2_vni.asn }}:{{ l2_vni.vni_id }}
set routing-instances {{ l2_vni.name }} protocols evpn multicast-mode ingress-replication
set routing-instances {{ l2_vni.name }} bridge-domains bd-{{ l2_vni.vlan_id }} vlan-id {{ l2_vni.vlan_id }}
set routing-instances {{ l2_vni.name }} bridge-domains bd-{{ l2_vni.vlan_id }} routing-interface irb.{{ l2_vni.vlan_id }}
set routing-instances {{ l2_vni.name }} bridge-domains bd-{{ l2_vni.vlan_id }} vxlan vni {{ l2_vni.vlan_id }}
set routing-instances {{ l2_vni.name }} bridge-domains bd-{{ l2_vni.vlan_id }} vxlan ingress-node-replication
set policy-options policy-statement {{ l2_vni.import }} term {{ l2_vni.term }} from community {{ l2_vni.name }}
set policy-options policy-statement {{ l2_vni.import }} term {{ l2_vni.term }} then accept
set policy-options community {{ l2_vni.vlan_id }} members target:{{ l2_vni.asn }}:{{ l2_vni.name }}
{% endfor %}

{#
set routing-instances <VNI1-L2> vtep-source-interface lo0.0
set routing-instances <VNI1-L2> instance-type virtual-switch
set routing-instances <VNI1-L2> route-distinguisher <LO0-ADDRESS>:<ID-VNI-1>
set routing-instances <VNI1-L2> vrf-import <VNI1-L2-IMPORT>
set routing-instances <VNI1-L2> vrf-target target:<AS-NUMBER>:<ID-VNI-1>
set routing-instances <VNI1-L2> protocols evpn encapsulation vxlan
set routing-instances <VNI1-L2> protocols evpn extended-vni-list <ID-VNI-1>
set routing-instances <VNI1-L2> protocols evpn vni-options vni <ID-VNI-1> vrf-target export target:<AS-NUMBER>:<ID-VNI-1>
set routing-instances <VNI1-L2> protocols evpn multicast-mode ingress-replication
set routing-instances <VNI1-L2> bridge-domains bd-<VNI1> vlan-id <VNI-1>
set routing-instances <VNI1-L2> bridge-domains bd-<VNI1> routing-interface irb.<VNI-1>
set routing-instances <VNI1-L2> bridge-domains bd-<VNI1> vxlan vni <VNI-1>
set routing-instances <VNI1-L2> bridge-domains bd-<VNI1> vxlan ingress-node-replication

set policy-options policy-statement <VNI1-L2-IMPORT> term A from community <VNI-1>
set policy-options policy-statement <VNI1-L2-IMPORT> term A then accept
set policy-options community <VNI-1> members target:<AS-NUMBER>:<VNI-1>
#}