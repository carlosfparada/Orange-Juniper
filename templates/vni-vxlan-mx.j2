{% for vni in vnis %}
set routing-instances {{ vni.l2_name }} instance-type mac-vrf
set routing-instances {{ vni.l2_name }} protocols evpn encapsulation vxlan
set routing-instances {{ vni.l2_name }} protocols evpn extended-vni-list {{ vni.vni_id }}
set routing-instances {{ vni.l2_name }} protocols evpn default-gateway do-not-advertise
set routing-instances {{ vni.l2_name }} vtep-source-interface {{ vni.lo_interface }}.0
set routing-instances {{ vni.l2_name }} remote-vtep-list {{ vni.l2_ovs_lo_address }}
set routing-instances {{ vni.l2_name }} bridge-domains bd-{{ vni.vlan_id }} vlan-id {{ vni.vlan_id }}
set routing-instances {{ vni.l2_name }} bridge-domains bd-{{ vni.vlan_id }} routing-interface irb.{{ vni.vlan_id }}
set routing-instances {{ vni.l2_name }} bridge-domains bd-{{ vni.vlan_id }} vxlan vni {{ vni.vlan_id }}
set routing-instances {{ vni.l2_name }} bridge-domains bd-{{ vni.vlan_id }} vxlan static-remote-vtep-list {{ vni.l2_ovs_lo_address }}
set routing-instances {{ vni.l2_name }} service-type vlan-based
set routing-instances {{ vni.l2_name }} route-distinguisher {{ lo_interfaces[vni.lo_interface].address }}:{{ vni.vlan_id }}
set routing-instances {{ vni.l2_name }} vrf-target target:{{ vni.asn }}:{{ vni.vni_id }}
set routing-instances {{ vni.l3_name }} instance-type vrf
set routing-instances {{ vni.l3_name }} interface irb.{{ vni.vlan_id }}
set routing-instances {{ vni.l3_name }} route-distinguisher {{ lo_interfaces[vni.lo_interface].address }}:{{ vni.vni_id }}
set routing-instances {{ vni.l3_name }} vrf-import {{ vni.l3_import }}
set routing-instances {{ vni.l3_name }} vrf-export {{ vni.l3_export }}
set routing-instances {{ vni.l3_name }} vrf-table-label
set policy-options community {{ vni.community }} members target:{{ vni.asn }}:{{ vni.vlan_id }}
set policy-options policy-statement {{ vni.l3_import }} term {{ vni.term }} from community {{ vni.community }}
set policy-options policy-statement {{ vni.l3_import }} term {{ vni.term }} then accept
set policy-options policy-statement {{ vni.l3_export }} term {{ vni.term }} then community add {{ vni.community }}
set policy-options policy-statement {{ vni.l3_export }} term {{ vni.term }} then accept
set interfaces irb unit {{ vni.vlan_id }} family inet address {{ vni.l3_address }}
{% endfor %}


{#
set routing-instances <L2_RI_NAME> instance-type mac-vrf
set routing-instances <L2_RI_NAME> protocols evpn encapsulation vxlan
set routing-instances <L2_RI_NAME> protocols evpn default-gateway do-not-advertise
set routing-instances <L2_RI_NAME> protocols evpn extended-vni-list <VNI_ID>
set routing-instances <L2_RI_NAME> vtep-source-interface lo0.0
set routing-instances <L2_RI_NAME> remote-vtep-list <OVS_LO0_ADDRESS>
set routing-instances <L2_RI_NAME> bridge-domains bd-<VLAN_ID> vlan-id <VLAN_ID>
set routing-instances <L2_RI_NAME> bridge-domains bd-<VLAN_ID> routing-interface irb.<VLAN_ID>
set routing-instances <L2_RI_NAME> bridge-domains bd-<VLAN_ID> vxlan vni <VNI_ID>
set routing-instances <L2_RI_NAME> bridge-domains bd-<VLAN_ID> vxlan static-remote-vtep-list <OVS_LO0_ADDRESS>
set routing-instances <L2_RI_NAME> service-type vlan-based
set routing-instances <L2_RI_NAME> route-distinguisher <LO0.0_ADDRESS>:<VLAN_ID>
set routing-instances <L2_RI_NAME> vrf-target target:<LOCAL_AS_NUMBER>:<VNI_ID>


set routing-instances <L3_RI_NAME> instance-type vrf
set routing-instances <L3_RI_NAME> interface irb.<VLAN_ID>
set routing-instances <L3_RI_NAME> route-distinguisher <LO0.0_ADDRESS>:<VNI_ID>
set routing-instances <L3_RI_NAME> vrf-import <L3_RI_NAME_IMPORT>
set routing-instances <L3_RI_NAME> vrf-export <L3_RI_NAME_EXPORT>
set routing-instances <L3_RI_NAME> vrf-table-label

set policy-options policy-statement <L3_RI_NAME_EXPORT> term A then community add <COM_VLAN_ID>
set policy-options policy-statement <L3_RI_NAME_EXPORT> term A then accept
set policy-options policy-statement <L3_RI_NAME_IMPORT> term A from community <COM_VLAN_ID>
set policy-options policy-statement <L3_RI_NAME_IMPORT> term A then accept
set policy-options community <COM_VLAN_ID> members target:<LOCAL_AS_NUMBER>:<VLAN_ID>

set interfaces irb unit <VLAN_ID> family inet address <IP_ADDRESS>
#}